{"version":3,"sources":["components/Logo/brain.svg","components/FaceRecognition/empty.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","onClick","className","Logo","options","max","style","height","width","paddingTop","src","brain","alt","ImageLinkForm","onInputChange","onSubmit","type","placeholder","onChange","Rank","FaceRecognition","imageUrl","box","leftCol","topRow","rightCol","bottomRow","customAtt","emptyImage","id","top","right","left","bottom","SignIn","for","name","value","href","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","calcFaceLocation","data","console","log","boxData","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","then","response","outputs","regions","catch","err","alert","route","params","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.636eabdb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.cc5b43f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.b87e26c5.png\";","import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({onRouteChange}) =>{\r\n\treturn(\r\n\t\t<nav>\r\n\t\t\t<p onClick={()=> onRouteChange('signin')} className='f3 link dim black underline p3 pointer' >Sign Out</p>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default Navigation;\r\n\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport './Logo.css'\r\nimport brain from './brain.svg'\r\n\r\nconst Logo = () =>{\r\n\treturn(\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 25 }} style={{ height: 150, width: 150 }} >\r\n \t\t\t\t<div className=\"Tilt-inner pa3\">\r\n\t\t\t\t\t<img style={{paddingTop:'25px'}}src={brain} alt=\"logo\"/>\r\n\t\t\t\t</div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Logo;\r\n\r\n","import React from 'react';\r\n\r\nimport './ImageLinkForm.css'\r\n\r\n\r\nconst ImageLinkForm = ({onInputChange, onSubmit}) =>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<p className='f3'>\r\n\t\t\t\t\t{'This magic Brain will detect faces in your pictures. Give it a try!'}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className='center'>\r\n\t\t\t\t\t<div className='form center pa4 br3 shadow-5'>\r\n\t\t\t\t\t\t<input className=\"f4 pad2 w-70 center\" type=\"text\" placeholder=\"Image URL\" onChange={onInputChange}/>\r\n\t\t\t\t\t\t<button className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\" onClick={onSubmit}>Detect</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ImageLinkForm;\r\n\r\n","import React from 'react';\r\n\r\nconst Rank = () =>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className=\"white f3\">\r\n\t\t\t{\"Jane Doe, your current rank is...\"}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"white f1\">\r\n\t\t\t{\"#8\"}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Rank;\r\n\r\n","import React from 'react';\r\nimport emptyImage from './empty.png';\r\nimport './FaceRecognition.css';\r\n\r\n\r\nconst FaceRecognition = ({imageUrl, box}) =>{\r\n\tconst {leftCol, topRow, rightCol, bottomRow} = box;\r\n\tlet customAtt='';\r\n\tif(!imageUrl){\r\n\t\timageUrl=emptyImage;\r\n\t\tcustomAtt='bd3 shadow-2 pa4';\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className='center ma'>\r\n\t\t\t<div className='absolute mt2'>\r\n\t\t\t\t<img className={customAtt} id=\"inputImage\" src={imageUrl} alt=\"\" width='500px' height='auto'/>\r\n\t\t\t\t<div className='bounding-box' style={{top: topRow, right: rightCol, left: leftCol, bottom: bottomRow}}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FaceRecognition;\r\n\r\n\t\t\t","import React from 'react';\r\n\r\nconst SignIn = ({onRouteChange}) => {\r\n\treturn(\r\n\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw5 mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t<form id='sign-in-form' className=\"measure\">\r\n\t\t\t\t\t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t\t\t<legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t\t\t<div className=\"mt3\">\r\n\t\t\t\t\t\t\t<label className=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\r\n\t\t\t\t\t\t\t<input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"mv3\">\r\n\t\t\t\t\t\t\t<label className=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\r\n\t\t\t\t\t\t\t<input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t<input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" onClick={()=>onRouteChange('home')}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"lh-copy mt3\">\r\n\t\t\t\t\t\t<a href=\"#0\" className=\"f6 link dim black db\">Register</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</main>\r\n\t\t</article>\r\n\t)\r\n}\r\n\r\nexport default SignIn;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from '../components/Navigation/Navigation';\nimport Logo from '../components/Logo/Logo';\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\nimport Rank from '../components/Rank/Rank';\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition';\nimport SignIn from '../components/SignIn/SignIn';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\n//aefe9fbcfa8a40dbb6da47a65ccd0071\nconst app = new Clarifai.App({\n  apiKey: 'aefe9fbcfa8a40dbb6da47a65ccd0071'\n });\n\nclass App extends Component {\nconstructor(){\n  super();\n  this.state = {\n    input:'',\n    imageUrl:'',\n    box:{},\n    route: 'signin'\n  }\n}\n\n  particlesOptions ={\n    particles: {\n      number: {\n        value: 80,\n        density: {\n          enable: true,\n          value_area: 300\n        }\n      }\n    }\n  }\n\n  calcFaceLocation = (data) =>{\n    console.log(data);\n    const boxData = data[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return ({\n      leftCol: boxData.left_col * width,\n      topRow: boxData.top_row * height,\n      rightCol: width - (boxData.right_col * width),\n      bottomRow: height - (boxData.bottom_row * height)\n    });\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n  onSubmit = (event) =>{\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", this.state.input ).then(\n      (response) => {\n        const box = this.calcFaceLocation(response.outputs[0].data.regions)\n        return box;\n      }).then((box)=>{\n        this.displayFaceBox(box);\n      })\n      .catch(err =>{ \n        alert('Invalid image!');\n        this.setState({input: '', imageUrl: '', box: {}});\n        console.log(err);\n      });\n    \n  }\n\n  onRouteChange = (route) =>{\n    this.setState({route: route});\n  }\n  render(){\n    return (\n    <div className=\"App\">\n      <Particles params={this.particlesOptions} className='particles'/>\n      <Navigation onRouteChange={this.onRouteChange}/>\n      {\n        this.state.route ==='signin'?\n          <SignIn onRouteChange={this.onRouteChange}/>\n          : <div>\n              <Logo />\n              <Rank />\n              <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit} />\n              <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box}/>\n          </div>\n      }\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}